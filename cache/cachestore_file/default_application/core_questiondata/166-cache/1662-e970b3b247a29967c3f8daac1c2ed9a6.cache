O:8:"stdClass":27:{s:2:"id";s:4:"1662";s:8:"category";s:3:"306";s:6:"parent";s:1:"0";s:4:"name";s:6:"Q12-17";s:12:"questiontext";s:348:"<p>Store the details of book(title,author name) in linked list and search for a book with title.</p>
<p>After obtaining the details of one book, the system asks the user if they would want to add other books (if so, provide y, otherwise, n), and they can search for a book by entering the book title.Â <strong>[Wipro</strong><strong>]</strong></p>";s:18:"questiontextformat";s:1:"1";s:15:"generalfeedback";s:0:"";s:21:"generalfeedbackformat";s:1:"1";s:11:"defaultmark";d:1;s:7:"penalty";d:0;s:5:"qtype";s:10:"coderunner";s:6:"length";s:1:"1";s:5:"stamp";s:37:"lms.velandev.life+250824050413+TFGzea";s:11:"timecreated";s:10:"1756011853";s:12:"timemodified";s:10:"1756011853";s:9:"createdby";s:1:"2";s:10:"modifiedby";s:1:"2";s:8:"idnumber";N;s:9:"contextid";s:3:"455";s:6:"status";s:5:"ready";s:9:"versionid";s:4:"1662";s:7:"version";s:1:"1";s:19:"questionbankentryid";s:4:"1648";s:14:"categoryobject";O:8:"stdClass":9:{s:2:"id";s:3:"306";s:4:"name";s:23:"M1-D2- Coding Challenge";s:9:"contextid";s:3:"455";s:4:"info";s:0:"";s:10:"infoformat";s:1:"0";s:5:"stamp";s:37:"lms.velandev.life+250824050413+VmNtaG";s:6:"parent";s:3:"304";s:9:"sortorder";s:3:"999";s:8:"idnumber";N;}s:7:"options";O:8:"stdClass":46:{s:14:"coderunnertype";s:6:"nodejs";s:13:"prototypetype";s:1:"0";s:12:"allornothing";s:1:"1";s:13:"penaltyregime";s:1:"0";s:8:"precheck";s:1:"0";s:9:"hidecheck";s:1:"0";s:10:"showsource";s:1:"0";s:14:"answerboxlines";s:2:"18";s:16:"answerboxcolumns";s:3:"100";s:13:"answerpreload";s:1337:"class ListNode {
    constructor(bookName, bookAuthor, next = null) {
        this.bookName = bookName;
        this.bookAuthor = bookAuthor;
        this.next = next;
    }
}
class BookLinkedList {
    constructor() {
        this.head = null;
    }

    addBook(bookName, bookAuthor) {
        /* Type your code here */
    }

    // Implement the search function here
    searchBook(bookName) {
        /* Type your code here */
    }
    
    //Print the book details
    printBook(){
        /* Type your code here */
    }
    
}

// Driver code

let bookList = new BookLinkedList();

const rl = require('readline').createInterface({
    input: process.stdin,
    output: process.stdout
  });

function askForBookDetails() {
    rl.question('', (id) => {
        rl.question('', (name) => {
            bookList.addBook(id, name);
            rl.question('', (answer) => {
                if (answer.toLowerCase() == 'y') {
                    askForBookDetails();
                } else {
                    rl.question('', (searchId) => {
                        bookList.printBook();
                        bookList.searchBook(searchId);
                        rl.close();
                });
                }
            });
        });
    });
}

askForBookDetails()";s:11:"globalextra";s:0:"";s:6:"useace";s:1:"1";s:13:"resultcolumns";N;s:8:"template";s:179:"{{ STUDENT_ANSWER }}

var SEPARATOR = "#<ab@17943918#@>#";

{% for TEST in TESTCASES %}
{{ TEST.testcode }}
{% if not loop.last %}
console.log(SEPARATOR);
{% endif %}
{% endfor %}";s:20:"iscombinatortemplate";s:1:"1";s:19:"allowmultiplestdins";s:1:"0";s:6:"answer";s:2229:"class ListNode {
    constructor(bookName, bookAuthor, next = null) {
        this.bookName = bookName;
        this.bookAuthor = bookAuthor;
        this.next = next;
    }
}
class BookLinkedList {
    constructor() {
        this.head = null;
    }

    addBook(bookName, bookAuthor) {
        const newNode = new ListNode(bookName, bookAuthor);
        if (!this.head) {
            this.head = newNode;
        } else {
            let current = this.head;
            while (current.next) {
                current = current.next;
            }
            current.next = newNode;
        }
    }

    // Implement the search function here
    searchBook(bookName) {
        let current = this.head;
        let found = 0
        while (current !== null) {
            if (current.bookName === bookName) {
                console.log("Book found\nTitle: "+current.bookName)
                process.stdout.write( `Author: ${current.bookAuthor}\n`)
                found = 1
            }
            current = current.next;
        }
        if(found == 0)
            console.log("Book with Title "+ bookName +" not found")
    }
    
    //Print the book details
    printBook(){
    let current = this.head
    while(current){
        console.log("Book Title:",current.bookName)
        console.log("Book Author:",current.bookAuthor)
        current = current.next
        }
    }
}
// Create a new BookLinkedList
let bookList = new BookLinkedList();
const rl = require('readline').createInterface({
    input: process.stdin,
    output: process.stdout
  });

function askForBookDetails() {
    rl.question('', (id) => {
        rl.question('', (name) => {
            bookList.addBook(id, name);
            rl.question('', (answer) => {
                if (answer.toLowerCase() == 'y') {
                    askForBookDetails();
                } else {
                    rl.question('', (searchId) => {
                        bookList.printBook();
                        bookList.searchBook(searchId);
                        rl.close();
                });
                }
            });
        });
    });
}

askForBookDetails()

";s:14:"validateonsave";s:1:"1";s:14:"testsplitterre";s:23:"|#<ab@17943918#@>#\n|ms";s:8:"language";s:6:"nodejs";s:7:"acelang";N;s:7:"sandbox";N;s:6:"grader";s:14:"EqualityGrader";s:16:"cputimelimitsecs";N;s:10:"memlimitmb";s:4:"1000";s:13:"sandboxparams";s:35:"{"sourcefilename": "__tester__.js"}";s:14:"templateparams";s:0:"";s:19:"hoisttemplateparams";s:1:"1";s:19:"extractcodefromjson";s:1:"1";s:18:"templateparamslang";s:4:"None";s:24:"templateparamsevalpertry";s:1:"0";s:19:"templateparamsevald";s:2:"{}";s:7:"twigall";s:1:"0";s:8:"uiplugin";s:3:"ace";s:12:"uiparameters";s:0:"";s:11:"attachments";s:1:"0";s:19:"attachmentsrequired";s:1:"0";s:11:"maxfilesize";s:5:"10240";s:14:"filenamesregex";s:0:"";s:16:"filenamesexplain";s:0:"";s:15:"displayfeedback";s:1:"1";s:13:"giveupallowed";s:1:"0";s:14:"prototypeextra";N;s:7:"answers";a:0:{}s:9:"customise";b:0;s:9:"testcases";a:5:{i:0;O:8:"stdClass":11:{s:2:"id";s:3:"503";s:10:"questionid";s:4:"1662";s:8:"testtype";s:1:"0";s:8:"testcode";s:0:"";s:5:"stdin";s:64:"The Great Gatsby
F. Scott Fitzgerald
y
1984
George Orwell
n
1984";s:8:"expected";s:150:"Book Title: The Great Gatsby
Book Author: F. Scott Fitzgerald
Book Title: 1984
Book Author: George Orwell
Book found
Title: 1984
Author: George Orwell";s:5:"extra";s:0:"";s:12:"useasexample";s:1:"1";s:7:"display";s:4:"SHOW";s:14:"hiderestiffail";s:1:"0";s:4:"mark";s:5:"1.000";}i:1;O:8:"stdClass":11:{s:2:"id";s:3:"504";s:10:"questionid";s:4:"1662";s:8:"testtype";s:1:"0";s:8:"testcode";s:0:"";s:5:"stdin";s:100:"To Kill a Mockingbird
Harper Lee
y
Moby Dick
Herman Melville
y
War and Peace
Leo Tolstoy
n
Moby Dick";s:8:"expected";s:211:"Book Title: To Kill a Mockingbird
Book Author: Harper Lee
Book Title: Moby Dick
Book Author: Herman Melville
Book Title: War and Peace
Book Author: Leo Tolstoy
Book found
Title: Moby Dick
Author: Herman Melville";s:5:"extra";s:0:"";s:12:"useasexample";s:1:"0";s:7:"display";s:4:"SHOW";s:14:"hiderestiffail";s:1:"0";s:4:"mark";s:5:"1.000";}i:2;O:8:"stdClass":11:{s:2:"id";s:3:"505";s:10:"questionid";s:4:"1662";s:8:"testtype";s:1:"0";s:8:"testcode";s:0:"";s:5:"stdin";s:44:"Pride and Prejudice
Jane Austen
n
The Hobbit";s:8:"expected";s:93:"Book Title: Pride and Prejudice
Book Author: Jane Austen
Book with Title The Hobbit not found";s:5:"extra";s:0:"";s:12:"useasexample";s:1:"1";s:7:"display";s:4:"SHOW";s:14:"hiderestiffail";s:1:"0";s:4:"mark";s:5:"1.000";}i:3;O:8:"stdClass":11:{s:2:"id";s:3:"506";s:10:"questionid";s:4:"1662";s:8:"testtype";s:1:"0";s:8:"testcode";s:0:"";s:5:"stdin";s:116:"The Catcher in the Rye
J.D. Salinger
y
The Lord of the Rings
J.R.R. Tolkien
y
The Hobbit
J.R.R. Tolkien
n
The Hobbit";s:8:"expected";s:226:"Book Title: The Catcher in the Rye
Book Author: J.D. Salinger
Book Title: The Lord of the Rings
Book Author: J.R.R. Tolkien
Book Title: The Hobbit
Book Author: J.R.R. Tolkien
Book found
Title: The Hobbit
Author: J.R.R. Tolkien";s:5:"extra";s:0:"";s:12:"useasexample";s:1:"0";s:7:"display";s:4:"HIDE";s:14:"hiderestiffail";s:1:"0";s:4:"mark";s:5:"1.000";}i:4;O:8:"stdClass":11:{s:2:"id";s:3:"507";s:10:"questionid";s:4:"1662";s:8:"testtype";s:1:"0";s:8:"testcode";s:0:"";s:5:"stdin";s:83:"Harry Potter and the Sorcerer's Stone
J.K. Rowling
n
Harry and the Sorcerer's Stone";s:8:"expected";s:132:"Book Title: Harry Potter and the Sorcerer's Stone
Book Author: J.K. Rowling
Book with Title Harry and the Sorcerer's Stone not found";s:5:"extra";s:0:"";s:12:"useasexample";s:1:"0";s:7:"display";s:4:"HIDE";s:14:"hiderestiffail";s:1:"0";s:4:"mark";s:5:"1.000";}}}s:5:"hints";a:0:{}s:9:"prototype";O:25:"qtype_coderunner_question":86:{s:2:"id";s:4:"2785";s:8:"category";s:1:"2";s:9:"contextid";s:1:"1";s:6:"parent";s:1:"0";s:5:"qtype";O:16:"qtype_coderunner":1:{s:14:" * fileoptions";a:3:{s:7:"subdirs";b:1;s:8:"maxfiles";i:-1;s:8:"maxbytes";i:0;}}s:4:"name";s:24:"BUILTIN_PROTOTYPE_nodejs";s:12:"questiontext";s:536:"<p>A JavaScript question type, run using nodejs. The
test program to be executed starts with the student answer. That is followed
by each of the test case codes in turn, with a separator string being printed
between them. However, if there is any standard input present for any of the
test cases, a separate test run will be done for each test case.</p><p>
If there is a risk of side-effects from a test case affecting later test cases
you can add standard input to any one of the test cases to force the one-run-per-test-case
mode.</p>";s:18:"questiontextformat";s:1:"1";s:15:"generalfeedback";s:0:"";s:21:"generalfeedbackformat";s:1:"1";s:11:"defaultmark";d:1;s:6:"length";s:1:"1";s:7:"penalty";d:0;s:5:"stamp";s:37:"lms.velandev.life+250922115904+0z8ofh";s:8:"idnumber";N;s:11:"timecreated";s:10:"1758542344";s:12:"timemodified";s:10:"1758542344";s:9:"createdby";s:1:"2";s:10:"modifiedby";s:1:"2";s:5:"hints";a:0:{}s:6:"status";s:5:"ready";s:9:"versionid";s:4:"2785";s:7:"version";s:1:"1";s:19:"questionbankentryid";s:4:"2771";s:16:" * latestversion";N;s:12:"customfields";a:0:{}s:14:"shownumcorrect";b:0;s:9:"testcases";a:0:{}s:14:"coderunnertype";s:6:"nodejs";s:13:"prototypetype";s:1:"1";s:12:"allornothing";s:1:"1";s:13:"penaltyregime";s:15:"33.3, 66.7, ...";s:8:"precheck";s:1:"0";s:9:"hidecheck";s:1:"0";s:10:"showsource";s:1:"0";s:14:"answerboxlines";s:2:"18";s:13:"answerpreload";s:0:"";s:11:"globalextra";s:0:"";s:6:"useace";s:1:"1";s:13:"resultcolumns";N;s:8:"template";s:179:"{{ STUDENT_ANSWER }}

var SEPARATOR = "#<ab@17943918#@>#";

{% for TEST in TESTCASES %}
{{ TEST.testcode }}
{% if not loop.last %}
console.log(SEPARATOR);
{% endif %}
{% endfor %}";s:20:"iscombinatortemplate";s:1:"1";s:19:"allowmultiplestdins";s:1:"0";s:6:"answer";s:0:"";s:14:"validateonsave";s:1:"0";s:14:"testsplitterre";s:23:"|#<ab@17943918#@>#\n|ms";s:8:"language";s:6:"nodejs";s:7:"acelang";N;s:7:"sandbox";N;s:6:"grader";s:14:"EqualityGrader";s:16:"cputimelimitsecs";N;s:10:"memlimitmb";s:4:"1000";s:13:"sandboxparams";s:35:"{"sourcefilename": "__tester__.js"}";s:14:"templateparams";s:0:"";s:19:"hoisttemplateparams";s:1:"0";s:19:"extractcodefromjson";s:1:"1";s:18:"templateparamslang";s:4:"twig";s:24:"templateparamsevalpertry";s:1:"0";s:19:"templateparamsevald";s:0:"";s:7:"twigall";s:1:"0";s:8:"uiplugin";s:3:"ace";s:12:"uiparameters";s:0:"";s:11:"attachments";s:1:"0";s:19:"attachmentsrequired";s:1:"0";s:11:"maxfilesize";s:1:"0";s:14:"filenamesregex";s:0:"";s:16:"filenamesexplain";s:0:"";s:15:"displayfeedback";s:1:"0";s:13:"giveupallowed";s:1:"0";s:14:"prototypeextra";N;s:7:"answers";a:0:{}s:9:"customise";b:1;s:7:"student";N;s:9:"prototype";N;s:26:"initialisationerrormessage";N;s:16:"cachedfuncparams";N;s:25:"cachedevaldtemplateparams";N;s:18:"mergeduiparameters";N;s:18:"templateparamsjson";N;s:10:"parameters";N;s:8:"stepinfo";N;s:7:"options";N;s:5:"isnew";N;s:7:"context";N;s:10:"questionid";N;s:16:"answerboxcolumns";s:3:"100";}}